# Theme setup to display git repository information and ruby version information
# Warning: contains emoji, which may or may not work on your system. Mac OS X 10.7+ does support emoji as a natively installed unicode font
# Author Jeremy Olliver <jeremy.olliver@gmail.com>

# Load dependencies.
pmodload 'helper'

function prompt_jeremyolliver_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
  fi
}

# Locates (naively) how/where the current ruby-version was set from, assuming
function prompt_jeremyolliver_ruby_source {
  if [ -n "$RBENV_VERSION" ]; then
    echo "shell"
  elif [ -f "$pwd/.ruby-version" ]; then
    echo "local"
  elif [ -f "$pwd/.rbenv-version" ]; then
    echo "local"
  elif [ -f "$HOME/.rbenv/version" ]; then
    echo "global"
  fi
}

function prompt_jeremyolliver_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling vcs_info before each command.
  add-zsh-hook precmd prompt_jeremyolliver_precmd

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'yes'

  # branch name
  zstyle ':prezto:module:git:info:branch' format ':%F{cyan}%b%f'
  # behind / ahead
  zstyle ':prezto:module:git:info:ahead' format ' %%B%F{white}‚¨Ü%f%%b'
  zstyle ':prezto:module:git:info:behind' format ' %%B%F{white}‚¨á%f%%b'

  # show git stashes
  zstyle ':prezto:module:git:info:stashed' format ' %%B%F{yellow}‚ú≠%S%f%%b'

  # Show git modified status
  zstyle ':prezto:module:git:info:dirty'     format ' %%B%F{red}¬±%f%%b'
  zstyle ':prezto:module:git:info:action'    format ':%%B%F{yellow}%s%f%%b'

  # unknown
  zstyle ':prezto:module:git:info:commit' format ':%F{green}%.7c%f'
  zstyle ':prezto:module:git:info:position' format ':%F{red}%p%f'

  # Format of the git-info display
  zstyle ':prezto:module:git:info:keys' format \
    'prompt' ' %F{cyan}git%f$(coalesce "%b" "%p" "%c")%s%D%S%A%B' \
    'rprompt' '%A%B%S%a%d%m%r%U%u'

  # Conditional display depending on if the previous command reported an error status or not
  _error_return_status_display='%(?:üíö:üí•) '

  PROMPT='%F{green}%~%f${git_info:+${(e)git_info[prompt]}} $_error_return_status_display %f‚ùØ '

  if (( $+commands[rbenv] )); then
    RPROMPT='üçì  %F{cyan}$(rbenv version-name)%f ($(prompt_jeremyolliver_ruby_source))'
  fi

}

prompt_jeremyolliver_setup "$@"
